language: python
os: linux
dist: trusty
sudo: required
# compiler: gcc

matrix:
  include:
    # - python: 2.7
    # - python: 3.4
    # - python: 3.5
    - python: 3.6
    # - python: "3.6-dev"
    # - python: "nightly"

  # allow_failures:
    # - python: "3.6-dev"
    # - python: "nightly"

# cache:
#   pip: true
#   directories:
#     - $HOME/.cache/pip
#     - $HOME/.local

# addons:
#   apt:
#     sources:
#       - ubuntu-toolchain-r-test
#     packages:
#       - python-pip
#       - gdal-bin
#       - libgdal-dev

# whitelist
branches:
  only:
    - develop

# env:
#   global:
#     - NO_NET=1

# command to install dependencies
install:
  - sudo apt-get update
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # Replace dep1 dep2 ... with your dependencies
  - conda create -q -n py36 python=$TRAVIS_PYTHON_VERSION numpy pandas scipy gdal
  - source activate py36
  - python setup.py install



# command to run tests
script: 
    # - export PYTHONPATH=$PYTHONPATH:.
    # - echo python path; python -c "from __future__ import print_function; import sys; print(sys.path)"
    - python -c "import os; is_travis = 'TRAVIS' in os.environ; print('TRAVIS {}'.format(is_travis))"
    - echo numpy version; python -c "import numpy; print(numpy.version.version)"
    - echo gdal version; python -c "from osgeo import gdal; print(gdal.__version__)"
    # - nosetests -v build_exes.py --with-id --with-timer -w ./autotest
    # - nosetests -v autotest_notebooks.py --with-id --with-timer -w ./autotest --with-coverage --cover-package=flopy
    # - nosetests -v autotest_scripts.py --with-id --with-timer -w ./autotest --with-coverage --cover-package=flopy
    # - nosetests -v --with-id --with-timer -w ./autotest --with-coverage --cover-package=flopy
# after_success:
    # - coveralls